// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore;
using Microsoft.Data.SqlClient;
using System;
using System.Data;
using System.Threading;
using System.Threading.Tasks;
using Garage.Core.Models;

namespace Garage.Core.AppDbContext
{
    public partial class GarageDbContextProcedures
    {
        private readonly GarageDbContext _context;

        public GarageDbContextProcedures(GarageDbContext context)
        {
            _context = context;
        }

        public async Task<spGetMaintenanceTriggerListResult[]> spGetMaintenanceTriggerList(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new []
            {
                parameterreturnValue,
            };
            var _ = await _context.SqlQueryAsync<spGetMaintenanceTriggerListResult>("EXEC @returnValue = [dbo].[spGetMaintenanceTriggerList]", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }

        public async Task<spGetStatutoryByCategoryIdResult[]> spGetStatutoryByCategoryId(int? CategoryID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new []
            {
                new SqlParameter
                {
                    ParameterName = "CategoryID",
                    Value = CategoryID ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Int,
                },
                parameterreturnValue,
            };
            var _ = await _context.SqlQueryAsync<spGetStatutoryByCategoryIdResult>("EXEC @returnValue = [dbo].[spGetStatutoryByCategoryId] @CategoryID", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }
    }
}
