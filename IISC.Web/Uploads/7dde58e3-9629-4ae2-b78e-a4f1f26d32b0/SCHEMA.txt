USE [master]
GO
/****** Object:  Database [GarageDb]    Script Date: 2021/05/31 17:12:16 ******/
CREATE DATABASE [GarageDb]
 CONTAINMENT = NONE
 ON  PRIMARY 
( NAME = N'GarageDb', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\GarageDb.mdf' , SIZE = 8192KB , MAXSIZE = UNLIMITED, FILEGROWTH = 65536KB )
 LOG ON 
( NAME = N'GarageDb_log', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\GarageDb_log.ldf' , SIZE = 73728KB , MAXSIZE = 2048GB , FILEGROWTH = 65536KB )
GO
ALTER DATABASE [GarageDb] SET COMPATIBILITY_LEVEL = 130
GO
IF (1 = FULLTEXTSERVICEPROPERTY('IsFullTextInstalled'))
begin
EXEC [GarageDb].[dbo].[sp_fulltext_database] @action = 'enable'
end
GO
ALTER DATABASE [GarageDb] SET ANSI_NULL_DEFAULT OFF 
GO
ALTER DATABASE [GarageDb] SET ANSI_NULLS OFF 
GO
ALTER DATABASE [GarageDb] SET ANSI_PADDING OFF 
GO
ALTER DATABASE [GarageDb] SET ANSI_WARNINGS OFF 
GO
ALTER DATABASE [GarageDb] SET ARITHABORT OFF 
GO
ALTER DATABASE [GarageDb] SET AUTO_CLOSE OFF 
GO
ALTER DATABASE [GarageDb] SET AUTO_SHRINK OFF 
GO
ALTER DATABASE [GarageDb] SET AUTO_UPDATE_STATISTICS ON 
GO
ALTER DATABASE [GarageDb] SET CURSOR_CLOSE_ON_COMMIT OFF 
GO
ALTER DATABASE [GarageDb] SET CURSOR_DEFAULT  GLOBAL 
GO
ALTER DATABASE [GarageDb] SET CONCAT_NULL_YIELDS_NULL OFF 
GO
ALTER DATABASE [GarageDb] SET NUMERIC_ROUNDABORT OFF 
GO
ALTER DATABASE [GarageDb] SET QUOTED_IDENTIFIER OFF 
GO
ALTER DATABASE [GarageDb] SET RECURSIVE_TRIGGERS OFF 
GO
ALTER DATABASE [GarageDb] SET  DISABLE_BROKER 
GO
ALTER DATABASE [GarageDb] SET AUTO_UPDATE_STATISTICS_ASYNC OFF 
GO
ALTER DATABASE [GarageDb] SET DATE_CORRELATION_OPTIMIZATION OFF 
GO
ALTER DATABASE [GarageDb] SET TRUSTWORTHY OFF 
GO
ALTER DATABASE [GarageDb] SET ALLOW_SNAPSHOT_ISOLATION OFF 
GO
ALTER DATABASE [GarageDb] SET PARAMETERIZATION SIMPLE 
GO
ALTER DATABASE [GarageDb] SET READ_COMMITTED_SNAPSHOT OFF 
GO
ALTER DATABASE [GarageDb] SET HONOR_BROKER_PRIORITY OFF 
GO
ALTER DATABASE [GarageDb] SET RECOVERY FULL 
GO
ALTER DATABASE [GarageDb] SET  MULTI_USER 
GO
ALTER DATABASE [GarageDb] SET PAGE_VERIFY CHECKSUM  
GO
ALTER DATABASE [GarageDb] SET DB_CHAINING OFF 
GO
ALTER DATABASE [GarageDb] SET FILESTREAM( NON_TRANSACTED_ACCESS = OFF ) 
GO
ALTER DATABASE [GarageDb] SET TARGET_RECOVERY_TIME = 60 SECONDS 
GO
ALTER DATABASE [GarageDb] SET DELAYED_DURABILITY = DISABLED 
GO
EXEC sys.sp_db_vardecimal_storage_format N'GarageDb', N'ON'
GO
ALTER DATABASE [GarageDb] SET QUERY_STORE = OFF
GO
USE [GarageDb]
GO
/****** Object:  User [report]    Script Date: 2021/05/31 17:12:16 ******/
CREATE USER [report] FOR LOGIN [report] WITH DEFAULT_SCHEMA=[dbo]
GO
ALTER ROLE [db_owner] ADD MEMBER [report]
GO
ALTER ROLE [db_datareader] ADD MEMBER [report]
GO
/****** Object:  Table [dbo].[Adm_AssetCategory]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Adm_AssetCategory](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CategoryName] [varchar](50) NULL,
	[IsActive] [bit] NULL,
 CONSTRAINT [PK_Adm_AssetCategory] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Adm_TriggerType]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Adm_TriggerType](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[TriggerName] [varchar](25) NULL,
 CONSTRAINT [PK_Adm_TriggerType] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Trn_LogSheet]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Trn_LogSheet](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CategoryID] [int] NULL,
	[LogTypeID] [int] NULL,
	[TriggerID] [int] NULL,
	[FrequencyID] [int] NULL,
	[AssetID] [int] NULL,
	[RegNo] [varchar](10) NULL,
	[PreviousValue] [float] NULL,
	[CurrentValue] [float] NULL,
	[LogStatus] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[ModifiedOn] [datetime] NULL,
	[ModifiedBy] [varchar](50) NULL,
	[Comment] [varchar](255) NULL,
 CONSTRAINT [PK_Trn_LogSheet] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[AdmGroupType]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[AdmGroupType](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[GroupName] [varchar](50) NOT NULL,
 CONSTRAINT [PK_AdmGroupType] PRIMARY KEY CLUSTERED 
(
	[GroupName] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Adm_ManageTrigger]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Adm_ManageTrigger](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CategoryID] [int] NULL,
	[TriggerID] [int] NULL,
	[TriggerValue] [int] NULL,
	[Threshold] [int] NULL,
	[IsActive] [bit] NULL,
	[CreatedBy] [varchar](50) NULL,
	[CreatedOn] [datetime] NULL,
	[ModifiedBy] [varchar](50) NULL,
	[ModifiedOn] [datetime] NULL,
	[MaintenanceTrigger] [bit] NULL,
 CONSTRAINT [PK_Adm_MaintenanceTrigger] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Adm_Make]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Adm_Make](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[Make] [varchar](50) NULL,
 CONSTRAINT [PK_Adm_Make] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Adm_Model]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Adm_Model](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[ModelName] [varchar](50) NULL,
 CONSTRAINT [PK_Adm_Model] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Adm_FuelType]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Adm_FuelType](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[FuelName] [varchar](20) NULL,
 CONSTRAINT [PK_Adm_FuelType] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Trn_Status]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Trn_Status](
	[ID] [int] NOT NULL,
	[TransStatus] [varchar](10) NULL,
 CONSTRAINT [PK_Trn_Status] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Hdr_Asset]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Hdr_Asset](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[AssetTypeID] [int] NULL,
	[GroupID] [int] NULL,
	[CategoryID] [int] NULL,
	[TankCapacity] [float] NULL,
	[PlannedConsumption] [float] NULL,
	[EngineNo] [varchar](30) NULL,
	[ChassisNo] [varchar](30) NULL,
	[RegNo] [varchar](10) NULL,
	[Make] [varchar](30) NULL,
	[ModelID] [varchar](30) NULL,
	[Year] [int] NULL,
	[EngineCapacity] [varchar](10) NULL,
	[FuelTypeID] [int] NULL,
	[Color] [varchar](20) NULL,
	[YearOfPurchase] [int] NULL,
	[InitialMileage] [float] NULL,
	[CurrentMileage] [float] NULL,
	[MileageLastService] [float] NULL,
	[LastServiceDate] [date] NULL,
	[AssetValue] [float] NULL,
	[TagNo] [varchar](30) NULL,
	[Comment] [varchar](255) NULL,
	[AssetStatus] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[CreatedBy] [varchar](50) NULL,
	[InsuranceExpiryDate] [datetime] NULL,
	[RoadTaxExpiryDate] [datetime] NULL,
	[FitnessExpiryDate] [datetime] NULL,
	[FolderID] [varchar](100) NULL,
 CONSTRAINT [PK_Hdr_Asset] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Adm_Status]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Adm_Status](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[Status] [varchar](50) NULL,
 CONSTRAINT [PK_Adm_Status] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Adm_AssetType]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Adm_AssetType](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[AssetType] [varchar](20) NULL,
 CONSTRAINT [PK_Adm_AssetType] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [dbo].[View_Utilisation]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




/****** Script for SelectTopNRows command from SSMS  ******/
CREATE VIEW [dbo].[View_Utilisation]
AS

SELECT L.[ID]
      ,L.[CategoryID]
	  ,C.CategoryName
      ,L.[LogTypeID]
      ,L.[TriggerID]
      ,L.[FrequencyID]
      ,L.[AssetID]
      ,L.[RegNo]
	  ,MK.Make AS MakeName
	  ,MD.ModelName
	  ,F.FuelName
	  ,SS.status AS AssetStatus
	  ,H.CurrentMileage
	  ,H.MileageLastService
	  ,TR.TriggerName
	  ,H.LastServiceDate
      ,L.[PreviousValue]
      ,L.[CurrentValue]
	  ,ISNULL((L.[CurrentValue]- L.[PreviousValue]), 0) AS [Utilized]
      ,L.[LogStatus]
	  ,S.TransStatus  AS [LogStatusName]
      ,L.[CreatedOn]
      ,L.[ModifiedOn]
      ,L.[ModifiedBy]
      ,L.[Comment]
	  ,MT.Threshold
	  ,MT.TriggerValue
	  ,GT.GroupName
	  ,ISNULL((H.[CurrentMileage] - H.[MileageLastService]), 0) AS [Difference]
	  ,CASE WHEN ISNULL((H.[CurrentMileage] - H.[MileageLastService]), 0) > MT.TriggerValue
		THEN 'OVERDUE'
		ELSE 'OK'
	   END AS AlertMessage

  FROM [dbo].[Trn_LogSheet] AS L
  INNER JOIN [dbo].[Adm_AssetCategory] AS C ON L.CategoryID = C.ID
  INNER JOIN [dbo].[Hdr_Asset] AS H ON L.RegNo = H.RegNo
  INNER JOIN [dbo].[Trn_Status] AS S ON L.LogStatus = S.ID
  INNER JOIN dbo.Adm_AssetCategory AS CC ON H.CategoryID = CC.ID 
  INNER JOIN dbo.Adm_AssetType AS T ON H.AssetTypeID = T.ID 
  INNER JOIN dbo.Adm_Make AS MK ON H.Make = MK.ID 
  INNER JOIN dbo.Adm_Model AS MD ON H.ModelID = MD.ID
  INNER JOIN dbo.Adm_FuelType AS F ON H.FuelTypeID = F.ID 
  INNER JOIN dbo.Adm_Status AS SS ON H.AssetStatus = SS.ID
  INNER JOIN dbo.Adm_TriggerType AS TR ON L.LogTypeID = TR.ID
  INNER JOIN dbo.AdmGroupType AS GT ON H.GroupID = GT.ID
  LEFT JOIN dbo.Adm_ManageTrigger AS MT ON L.CategoryID = MT.CategoryID --AND L.TriggerID = MT.TriggerID

GO
/****** Object:  View [dbo].[V_SummaryTriggerLog]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Script for SelectTopNRows command from SSMS  *****
WHERE L.ID = 7

	  * ###[LogTypeID]###
	  *	ID	TriggerName
		1	H - Running Hours
		2	KM - Mileage
		3	F - Fuel Consumption
	  
*
		### [TriggerID] ###
		[Adm_ManageTrigger]
	  */
CREATE VIEW [dbo].[V_SummaryTriggerLog]
AS
SELECT        L.ID, L.CategoryID, C.CategoryName, L.LogTypeID, L.TriggerID, T.TriggerName, L.FrequencyID, L.AssetID, L.RegNo, L.PreviousValue, L.CurrentValue, L.LogStatus, L.CreatedOn, L.ModifiedOn, L.ModifiedBy, L.Comment, 
                         MT.Threshold, MT.TriggerValue
FROM            dbo.Trn_LogSheet AS L INNER JOIN
                         dbo.Adm_AssetCategory AS C ON L.CategoryID = C.ID INNER JOIN
                         dbo.Adm_TriggerType AS T ON L.LogTypeID = T.ID LEFT OUTER JOIN
                         dbo.Adm_ManageTrigger AS MT ON L.CategoryID = MT.CategoryID --AND L.TriggerID = MT.TriggerID
GO
/****** Object:  Table [dbo].[Adm_MaintenanceType]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Adm_MaintenanceType](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MaintenanceName] [varchar](30) NULL,
 CONSTRAINT [PK_Adm_MaintenanceType] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[HdrMaintenance]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[HdrMaintenance](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MaintenanceType] [int] NULL,
	[MaintenanceSummary] [varchar](max) NULL,
	[BreakdownDate] [date] NULL,
	[CurrentMileage] [float] NULL,
	[LoggedBy] [varchar](50) NULL,
	[StatusID] [int] NULL,
	[DateTimeIn] [datetime] NULL,
	[TimeIn] [varchar](10) NULL,
	[DateClosed] [datetime] NULL,
	[RegNo] [varchar](10) NULL,
	[AssetID] [int] NULL,
	[ClosureComment] [varchar](max) NULL,
	[CreatedOn] [datetime] NULL,
	[ModifiedOn] [datetime] NULL,
	[ModifiedBy] [varchar](20) NULL,
 CONSTRAINT [PK_HdrMaintenance] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  View [dbo].[View_MaintenanceHeader]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE VIEW [dbo].[View_MaintenanceHeader]
AS

SELECT M.ID AS MainID, M.MaintenanceType, T.MaintenanceName, M.MaintenanceSummary, M.BreakdownDate, M.CurrentMileage, M.LoggedBy, M.StatusID,S.TransStatus, M.DateTimeIn, M.TimeIn, M.DateClosed, M.RegNo, M.AssetID, 
                         M.ClosureComment, M.CreatedOn, M.ModifiedOn, M.ModifiedBy,C.CategoryName, MK.Make AS MakeName,MD.ModelName,F.FuelName,GT.GroupName
FROM            dbo.HdrMaintenance AS M LEFT OUTER JOIN
                         dbo.Adm_MaintenanceType AS T ON M.MaintenanceType = T.ID
						 INNER JOIN Hdr_Asset AS H ON M.AssetID = H.ID AND M.RegNo = H.RegNo
						 LEFT JOIN Trn_Status AS S ON M.StatusID = S.ID LEFT OUTER JOIN
						 dbo.Adm_AssetCategory AS C ON H.CategoryID = C.ID LEFT OUTER JOIN
                         dbo.Adm_Make AS MK ON H.Make = MK.ID LEFT OUTER JOIN
                         dbo.Adm_Model AS MD ON H.ModelID = MD.ID LEFT OUTER JOIN
                         dbo.Adm_FuelType AS F ON H.FuelTypeID = F.ID LEFT OUTER JOIN
						 dbo.AdmGroupType AS GT ON H.GroupID = GT.ID
GO
/****** Object:  Table [dbo].[TrnPartUsed]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TrnPartUsed](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MainID] [int] NULL,
	[ProblemDescription] [varchar](max) NULL,
	[DocketNo] [varchar](100) NULL,
	[PartID] [varchar](20) NULL,
	[Qty] [int] NULL,
	[PartCost] [float] NULL,
	[PurchaseOrder] [varchar](10) NULL,
	[DateLogged] [datetime] NULL,
	[LoggedBy] [varchar](20) NULL,
 CONSTRAINT [PK_TrnPartUsed] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[AXAutoMobile]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[AXAutoMobile](
	[ItemId] [varchar](15) NOT NULL,
	[UnitId] [varchar](5) NULL,
	[ItemGroup] [varchar](50) NULL,
	[ItemName] [varchar](150) NULL,
	[ItemPrice] [float] NULL,
	[PriceDate] [date] NULL,
 CONSTRAINT [PK_AXAutoMobile] PRIMARY KEY CLUSTERED 
(
	[ItemId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [dbo].[View_MaintenanceSummary]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[View_MaintenanceSummary]
AS
SELECT        M.ID AS MainID, M.MaintenanceType, T.MaintenanceName, M.MaintenanceSummary, M.BreakdownDate, M.CurrentMileage, M.LoggedBy, M.StatusID, S.TransStatus, M.DateTimeIn, M.TimeIn, M.DateClosed, M.RegNo, 
                         M.AssetID, M.ClosureComment, P.ProblemDescription, P.DocketNo, P.PartID, C.ItemName AS ItemDescription, C.ItemId PartNumber, C.ItemId AS MaintenancePart, P.Qty, P.PartCost, P.PurchaseOrder, M.CreatedOn, M.ModifiedOn, M.ModifiedBy
FROM            dbo.HdrMaintenance AS M LEFT OUTER JOIN
                         dbo.Adm_MaintenanceType AS T ON M.MaintenanceType = T.ID LEFT OUTER JOIN
                         dbo.TrnPartUsed AS P ON M.ID = P.MainID LEFT OUTER JOIN
                         dbo.[AXAutoMobile] AS C ON P.PartID = C.ItemId LEFT OUTER JOIN
                         dbo.Trn_Status AS S ON M.StatusID = S.ID
GO
/****** Object:  View [dbo].[View_AssetDetails]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[View_AssetDetails]
AS
SELECT        A.ID, A.AssetTypeID, T.AssetType, A.CategoryID, C.CategoryName, A.EngineNo, A.ChassisNo, A.RegNo, A.Make, MK.Make AS MakeName, A.ModelID, MD.ModelName, A.Year, A.EngineCapacity, A.FuelTypeID, F.FuelName, 
                         A.Color, A.YearOfPurchase, A.InitialMileage, A.CurrentMileage, A.MileageLastService, A.LastServiceDate, A.AssetValue, A.TagNo, A.Comment, A.AssetStatus, S.status, A.CreatedOn, A.CreatedBy, A.InsuranceExpiryDate, 
                         A.RoadTaxExpiryDate, A.FitnessExpiryDate, GT.GroupName
FROM            dbo.Hdr_Asset AS A LEFT OUTER JOIN
                         dbo.Adm_AssetCategory AS C ON A.CategoryID = C.ID LEFT OUTER JOIN
                         dbo.Adm_AssetType AS T ON A.AssetTypeID = T.ID LEFT OUTER JOIN
                         dbo.Adm_Make AS MK ON A.Make = MK.ID LEFT OUTER JOIN
                         dbo.Adm_Model AS MD ON A.ModelID = MD.ID LEFT OUTER JOIN
                         dbo.Adm_FuelType AS F ON A.FuelTypeID = F.ID LEFT OUTER JOIN
                         dbo.Adm_Status AS S ON A.AssetStatus = S.ID LEFT OUTER JOIN
						 dbo.AdmGroupType AS GT ON A.GroupID = GT.ID
GO
/****** Object:  Table [dbo].[TrnFuelConsumption]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TrnFuelConsumption](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegNo] [varchar](10) NULL,
	[AssetID] [int] NULL,
	[OdometerReading] [float] NULL,
	[PreviousReading] [float] NULL,
	[LitresReceived] [float] NULL,
	[CurrentFuelPrice] [float] NULL,
	[TransactionDate] [datetime] NULL,
	[LoggedBy] [varchar](50) NULL,
 CONSTRAINT [PK_TrnFuelConsumption] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [dbo].[View_FuelConsumption]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Script for SelectTopNRows command from SSMS  ******/
CREATE VIEW [dbo].[View_FuelConsumption]
AS
SELECT FC.[RegNo]
      ,FC.[AssetID]
      ,FC.[OdometerReading]
      ,FC.[PreviousReading]
	  ,FC.[LitresReceived]
      ,FC.[CurrentFuelPrice]
	  ,(FC.[LitresReceived] * FC.[CurrentFuelPrice]) AS TotalCost
	  ,A.PlannedConsumption
	  ,A.TankCapacity
	  ,(FC.[OdometerReading] - FC.[PreviousReading]) AS KMs
	  ,((FC.[OdometerReading] - FC.[PreviousReading]) / FC.[LitresReceived]) AS [Actual Km/L]
	  ,(FC.LitresReceived - A.TankCapacity) AS CapacityVariance
	  ,(A.PlannedConsumption / (FC.[OdometerReading] - FC.[PreviousReading])) AS PlannedLts
	  ,(FC.LitresReceived - (A.PlannedConsumption / (FC.[OdometerReading] - FC.[PreviousReading]))) AS [Total Lts Over consumption]
	  ,MK.Make AS MakeName
	  ,MD.ModelName
	  ,T.AssetType
	  ,F.FuelName
	  ,GT.GroupName
	  ,S.Status AS AssetStatus
	  ,C.CategoryName
      ,FC.[TransactionDate]
      ,FC.[LoggedBy] AS [Operator ID]
  FROM [dbo].[TrnFuelConsumption] AS FC INNER JOIN
		[dbo].[Hdr_Asset] AS A ON FC.RegNo = A.RegNo  LEFT OUTER JOIN
		dbo.Adm_AssetCategory AS C ON A.CategoryID = C.ID LEFT OUTER JOIN
        dbo.Adm_AssetType AS T ON A.AssetTypeID = T.ID LEFT OUTER JOIN
        dbo.Adm_Make AS MK ON A.Make = MK.ID LEFT OUTER JOIN
        dbo.Adm_Model AS MD ON A.ModelID = MD.ID LEFT OUTER JOIN
        dbo.Adm_FuelType AS F ON A.FuelTypeID = F.ID LEFT OUTER JOIN
        dbo.Adm_Status AS S ON A.AssetStatus = S.ID LEFT OUTER JOIN
		dbo.AdmGroupType AS GT ON A.GroupID = GT.ID
GO
/****** Object:  Table [dbo].[Adm_AttachmentTypes]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Adm_AttachmentTypes](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[FileType] [varchar](50) NOT NULL,
 CONSTRAINT [PK_Adm_AttachmentTypes] PRIMARY KEY CLUSTERED 
(
	[FileType] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Adm_CategoryStatutoryLink]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Adm_CategoryStatutoryLink](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CategoryID] [int] NULL,
	[StatutoryID] [int] NULL,
	[CreatedOn] [datetime] NULL,
	[CreatedBy] [varchar](50) NULL,
	[ModifiedOn] [datetime] NULL,
	[ModifiedBy] [varchar](50) NULL,
 CONSTRAINT [PK_Adm_CategoryStatutory] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Adm_Color]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Adm_Color](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[color] [varchar](50) NULL,
	[code] [varchar](50) NULL,
 CONSTRAINT [PK_Adm_Color] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Adm_Frequency]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Adm_Frequency](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[FrequencyName] [varchar](50) NULL,
 CONSTRAINT [PK_Adm_Frequency] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Adm_InsuranceType]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Adm_InsuranceType](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[InsuranceName] [varchar](50) NULL,
 CONSTRAINT [PK_Adm_InsuranceType] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Adm_ManageLogSheet]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Adm_ManageLogSheet](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CategoryID] [int] NULL,
	[LogSheetTypeID] [int] NULL,
	[TriggerFrequency] [int] NULL,
	[TriggerTime] [time](7) NULL,
	[IsActive] [bit] NULL,
	[CreatedOn] [datetime] NULL,
	[CreatedBy] [varchar](50) NULL,
	[ModifiedOn] [datetime] NULL,
	[ModifiedBy] [varchar](50) NULL,
 CONSTRAINT [PK_Adm_ManageLogSheet] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Adm_Statutory]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Adm_Statutory](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[StatutoryName] [varchar](50) NULL,
	[IsActive] [bit] NULL,
 CONSTRAINT [PK_Adm_Statutory] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[AdmPartsCatalog]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[AdmPartsCatalog](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[ItemDescription] [varchar](255) NULL,
	[PartNumber] [varchar](50) NULL,
	[CategoryID] [int] NULL,
	[MakeID] [int] NULL,
	[ModelID] [int] NULL,
	[Comment] [varchar](255) NULL,
	[IsDeleted] [bit] NULL,
	[MaintenancePart] [bit] NULL,
	[ExtItemID] [varchar](50) NULL,
	[ExtPrice] [float] NULL,
	[LastUpdated] [datetime] NULL,
 CONSTRAINT [PK_AdmPartsCatalog] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[AdmPriority]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[AdmPriority](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[PriorityName] [varchar](20) NULL,
 CONSTRAINT [PK_AdmPriority] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[AdmPurpose]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[AdmPurpose](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[PurposeDescription] [varchar](100) NOT NULL,
 CONSTRAINT [PK_AdmPurpose] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[AdmReason]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[AdmReason](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[ReasonOfFailure] [varchar](100) NULL,
 CONSTRAINT [PK_AdmReason] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[AdmSection]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[AdmSection](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[SectionName] [varchar](30) NULL,
 CONSTRAINT [PK_AdmSection] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Gen_SystemArea]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Gen_SystemArea](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[ModuleName] [varchar](20) NOT NULL,
	[Title] [varchar](100) NOT NULL,
	[Description] [varchar](100) NOT NULL,
	[PageUrl] [varchar](255) NULL,
	[ImagePath] [varchar](255) NOT NULL,
	[Status] [bit] NOT NULL,
	[RoleAccessID] [varchar](20) NULL,
	[UrlType] [varchar](15) NULL,
 CONSTRAINT [PK_Gen_SystemArea] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Hdr_StatutoryRequirement]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Hdr_StatutoryRequirement](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[AssetID] [int] NOT NULL,
	[RegNo] [varchar](25) NULL,
	[ChassisNo] [varchar](25) NULL,
	[StatutoryID] [int] NULL,
	[StatutoryAvailable] [bit] NULL,
	[InsuranceTypeID] [int] NULL,
	[InsuranceCompany] [varchar](50) NULL,
	[AmountPaid] [float] NULL,
	[DateFrom] [date] NULL,
	[DateTo] [date] NULL,
	[FileName] [varchar](255) NULL,
	[DateModified] [datetime] NULL,
	[ModifiedBy] [varchar](50) NULL,
 CONSTRAINT [PK_Hdr_StatutoryRequirement] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[SysScheduledLogs]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[SysScheduledLogs](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[LogDescription] [varchar](255) NULL,
	[AssetId] [int] NULL,
	[CategoryId] [int] NULL,
	[CurrentValue] [float] NULL,
	[LastServiceValue] [float] NULL,
	[DifferenceValue] [float] NULL,
	[TriggerValue] [float] NULL,
	[RegNo] [varchar](10) NULL,
	[LogDate] [datetime] NULL,
	[LoggedBy] [varchar](50) NULL,
	[IsProcessed] [bit] NULL,
	[ProcessedDate] [datetime] NULL,
 CONSTRAINT [PK_SysLogs] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Trn_Attachments]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Trn_Attachments](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[AssetID] [int] NULL,
	[RegNo] [varchar](10) NULL,
	[FileName] [varchar](100) NULL,
	[FileType] [int] NULL,
	[PathName] [varchar](max) NULL,
	[LoggedDate] [datetime] NULL,
	[LoggedBy] [varchar](50) NULL,
 CONSTRAINT [PK_Trn_Attachments] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TrnFuelPriceHistory]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TrnFuelPriceHistory](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[FuelID] [int] NULL,
	[CurrentPrice] [float] NULL,
	[DateLogged] [datetime] NULL,
	[LoggedBy] [varchar](50) NULL,
 CONSTRAINT [PK_TrnPriceHistory] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TrnSpecialTools]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TrnSpecialTools](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MaintenanceID] [int] NOT NULL,
	[Description] [varchar](max) NULL,
	[Location] [varchar](100) NULL,
	[SpecialInstructions] [varchar](max) NULL,
	[TransactionDate] [datetime] NULL,
 CONSTRAINT [PK_TrnSpecialTools] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TrnWorkOrderParts]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TrnWorkOrderParts](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MaintenanceID] [int] NOT NULL,
	[PartID] [int] NOT NULL,
	[PartDescription] [varchar](255) NULL,
	[Qty] [int] NULL,
	[UnitCost] [float] NULL,
	[TransactionDate] [datetime] NULL,
 CONSTRAINT [PK_TrnWorkOrderParts] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[WorkOrderHdr]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[WorkOrderHdr](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MaintenanceID] [int] NOT NULL,
	[SectionID] [int] NULL,
	[Priority] [int] NULL,
	[Purpose] [int] NULL,
	[ReasonForFailure] [int] NULL,
	[WorkDescription] [varchar](max) NULL,
	[LoggedBy] [varchar](20) NULL,
	[LoggedDate] [datetime] NULL,
 CONSTRAINT [PK_WorkOrderHdr] PRIMARY KEY CLUSTERED 
(
	[MaintenanceID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[zDateImport]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[zDateImport](
	[ID] [int] NULL,
	[REGNO] [varchar](15) NULL,
	[DateLog] [datetime] NULL,
	[MileOut] [float] NULL,
	[MileIn] [float] NULL,
	[Purpose] [varchar](500) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[zRole]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[zRole](
	[Module] [varchar](50) NULL,
	[RoleName] [varchar](50) NOT NULL,
	[RoleDescription] [varchar](150) NULL,
 CONSTRAINT [PK_zRole] PRIMARY KEY CLUSTERED 
(
	[RoleName] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[zRoleUser]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[zRoleUser](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[UserId] [varchar](20) NULL,
	[RoleName] [varchar](20) NULL,
	[CreatedOn] [datetime] NULL,
	[LoggedBy] [varchar](50) NULL,
 CONSTRAINT [PK_zRoleUser] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[zUsers]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[zUsers](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[UserId] [varchar](20) NOT NULL,
	[FirstName] [varchar](50) NULL,
	[LastName] [varchar](50) NULL,
	[EmailAddress] [varchar](50) NULL,
	[CreatedOn] [datetime] NULL,
	[CreatedBy] [varchar](50) NULL,
 CONSTRAINT [PK_zUsers] PRIMARY KEY CLUSTERED 
(
	[UserId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [dbo].[Adm_ManageTrigger] ADD  CONSTRAINT [DF_Adm_ManageTrigger_MaintenanceTrigger]  DEFAULT ((0)) FOR [MaintenanceTrigger]
GO
ALTER TABLE [dbo].[AdmPartsCatalog] ADD  CONSTRAINT [DF_AdmPartsCatalog_IsDeleted]  DEFAULT ((0)) FOR [IsDeleted]
GO
ALTER TABLE [dbo].[Hdr_Asset] ADD  CONSTRAINT [DF_Hdr_Asset_TankCapacity]  DEFAULT ((0)) FOR [TankCapacity]
GO
ALTER TABLE [dbo].[Hdr_Asset] ADD  CONSTRAINT [DF_Hdr_Asset_PlannedConsumption]  DEFAULT ((0)) FOR [PlannedConsumption]
GO
ALTER TABLE [dbo].[Hdr_Asset] ADD  CONSTRAINT [DF_Hdr_Asset_CurrentMileage]  DEFAULT ((0)) FOR [CurrentMileage]
GO
ALTER TABLE [dbo].[Hdr_Asset] ADD  CONSTRAINT [DF_Hdr_Asset_MileageLastService]  DEFAULT ((0)) FOR [MileageLastService]
GO
ALTER TABLE [dbo].[SysScheduledLogs] ADD  CONSTRAINT [DF_SysScheduledLogs_IsProcessed]  DEFAULT ((0)) FOR [IsProcessed]
GO
ALTER TABLE [dbo].[TrnFuelConsumption] ADD  CONSTRAINT [DF_TrnFuelConsumption_PreviousReading]  DEFAULT ((0)) FOR [PreviousReading]
GO
ALTER TABLE [dbo].[TrnFuelPriceHistory] ADD  CONSTRAINT [DF_TrnFuelPriceHistory_CurrentPrice]  DEFAULT ((0)) FOR [CurrentPrice]
GO
ALTER TABLE [dbo].[TrnPartUsed] ADD  CONSTRAINT [DF_TrnPartUsed_Qty]  DEFAULT ((1)) FOR [Qty]
GO
ALTER TABLE [dbo].[TrnPartUsed] ADD  CONSTRAINT [DF_TrnPartUsed_PartCost]  DEFAULT ((0)) FOR [PartCost]
GO
/****** Object:  StoredProcedure [dbo].[GetMaintenanceById]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[GetMaintenanceById]

	 @ID INT
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT M.[ID]
      ,M.[MaintenanceType]
	  ,T.MaintenanceName
      ,M.[MaintenanceSummary]
      ,M.BreakdownDate
      ,M.[CurrentMileage]
      ,M.[LoggedBy]
      ,M.[StatusID]
	  ,S.TransStatus
      ,M.[DateTimeIn]
      ,M.[TimeIn]
      ,M.[DateClosed]
      ,M.[RegNo]
      ,M.[AssetID]
	  ,M.[ClosureComment]
      ,M.[CreatedOn]
      ,M.[ModifiedOn]
      ,M.[ModifiedBy]
  FROM [GarageDb].[dbo].[HdrMaintenance] AS M
  INNER JOIN Adm_MaintenanceType AS T ON M.MaintenanceType = T.ID
  INNER JOIN Trn_Status AS S ON M.StatusID = S.ID
  WHERE M.ID = @ID

END
GO
/****** Object:  StoredProcedure [dbo].[GetMaintenanceByRegNo]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[GetMaintenanceByRegNo]

	 @AssetID INT
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT M.[ID]
      ,M.[MaintenanceType]
	  ,T.MaintenanceName
      ,M.[MaintenanceSummary]
      ,M.[BreakdownDate]
      ,M.[CurrentMileage]
      ,M.[LoggedBy]
      ,M.[StatusID]
	  ,S.TransStatus
      ,M.[DateTimeIn]
      ,M.[TimeIn]
      ,M.[DateClosed]
      ,M.[RegNo]
      ,M.[AssetID]
	  ,[ClosureComment]
      ,[CreatedOn]
      ,[ModifiedOn]
      ,[ModifiedBy]
  FROM [GarageDb].[dbo].[HdrMaintenance] AS M
  INNER JOIN Adm_MaintenanceType AS T ON M.MaintenanceType = T.ID
  INNER JOIN Trn_Status AS S ON M.StatusID = S.ID
  WHERE M.AssetID = @AssetID
  ORDER BY M.ID DESC
END
GO
/****** Object:  StoredProcedure [dbo].[spAddLogSheet]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spAddLogSheet]
		@CategoryID	int,
		@CurrentValue float,
		@RegNo varchar(50),
		@Comment varchar(255)


AS
BEGIN

	SET NOCOUNT ON;

	UPDATE Hdr_Asset SET CurrentMileage = @CurrentValue WHERE RegNo = @RegNo

	INSERT INTO [Trn_LogSheet]
	(
      [CategoryID]
      ,[LogTypeID]
      ,[TriggerID]
      ,[FrequencyID]
      ,[AssetID]
      ,[RegNo]
      ,[PreviousValue]
	  ,CurrentValue
      ,[LogStatus]
      ,[CreatedOn]
	  ,Comment

	)

	SELECT A.CategoryID,
	L.LogSheetTypeID,
	L.ID AS TriggerID,
	L.TriggerFrequency,
	A.ID AS AssetID,
	A.RegNo,
	@CurrentValue AS CurrentValue,
	0,
	0 AS [LogStatus],
	GETDATE() AS CreatedOn,
	@Comment AS Comment
	FROM [dbo].[Hdr_Asset] AS A
	INNER JOIN [Adm_ManageLogSheet] AS L ON A.CategoryID = L.CategoryID
	WHERE A.RegNo = @RegNo  AND L.CategoryID IN 
	(
		SELECT CategoryID FROM [Adm_ManageLogSheet] WHERE IsActive = 1  AND CategoryID IN (@CategoryID) AND L.TriggerFrequency = 1
		/** Trigger Frequency of 1 means Daily**/
	)

END
GO
/****** Object:  StoredProcedure [dbo].[spAddPartsUsed]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spAddPartsUsed] 

	@MainID	int,
	@ProblemDescription	varchar(MAX),
	@DocketNo	varchar(100),
	@PartID	varchar(20),
	@Qty	int,
	@PartCost	float,
	@PurchaseOrder	varchar(10),
	@LoggedBy	varchar(20)
AS
BEGIN

	SET NOCOUNT ON;

	INSERT INTO TrnPartUsed (MainID, ProblemDescription, DocketNo, PartID, Qty, PartCost, PurchaseOrder, DateLogged, LoggedBy)
	VALUES (@MainID, @ProblemDescription, @DocketNo, @PartID, @Qty, @PartCost, @PurchaseOrder, GETDATE(), @LoggedBy)

END
GO
/****** Object:  StoredProcedure [dbo].[spAddStatutory]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spAddStatutory] 
	-- Add the parameters for the stored procedure here
	@AssetID	int,
	@RegNo	varchar(25),
	@ChassisNo	varchar(25),
	@StatutoryID	int,
	@StatutoryAvailable	bit,
	@InsuranceTypeID	int,
	@InsuranceCompany	varchar(50),
	@AmountPaid	float,
	@DateFrom	date,
	@DateTo	date,
	@FileName	varchar(255),

	@ModifiedBy	varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	DECLARE 	@DateModified	datetime = GETDATE()

    -- Insert statements for procedure here
	INSERT INTO Hdr_StatutoryRequirement (AssetID,RegNo,ChassisNo,StatutoryID,StatutoryAvailable,InsuranceTypeID,InsuranceCompany,AmountPaid,DateFrom,DateTo,[FileName],DateModified, ModifiedBy)
	VALUES (@AssetID,@RegNo,@ChassisNo,@StatutoryID,@StatutoryAvailable,@InsuranceTypeID,@InsuranceCompany,@AmountPaid,@DateFrom,@DateTo,@FileName,@DateModified, @ModifiedBy)

END
GO
/****** Object:  StoredProcedure [dbo].[spAddWOPartsUsed]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spAddWOPartsUsed] 

	@MainID	int,
	@PartID	int,
	@PartDescription	varchar(255),
	@Qty	int,
	@UnitCost	float

AS
BEGIN

	SET NOCOUNT ON;

	INSERT INTO [TrnWorkOrderParts] 
	([MaintenanceID]
      ,[PartID]
      ,[PartDescription]
      ,[Qty]
      ,[UnitCost]
      ,[TransactionDate])
	VALUES (@MainID, @PartID, @PartDescription, @Qty, @UnitCost, GETDATE())

END
GO
/****** Object:  StoredProcedure [dbo].[spGetAssetById]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spGetAssetById]
	@ID INT

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

 SELECT A.[ID]
      ,A.[AssetTypeID]
	  ,T.AssetType
      ,A.[CategoryID]
	  ,A.TankCapacity
	  ,A.PlannedConsumption
	  ,C.CategoryName
	  ,A.GroupID
	  ,GP.GroupName
      ,A.[EngineNo]
      ,A.[ChassisNo]
      ,A.[RegNo]
      ,A.[Make]
	  ,M.Make AS [MakeName]
      ,A.[ModelID]
	  ,MM.ModelName
      ,A.[Year]
      ,A.[EngineCapacity]
      ,A.[FuelTypeID]
	  ,F.FuelName
      ,A.[Color]
      ,A.[YearOfPurchase]
      ,A.[InitialMileage]
      ,A.[CurrentMileage]
	  ,ISNULL((A.[CurrentMileage] - A.[MileageLastService]), 0) AS [Difference]
      ,A.[AssetValue]
      ,A.[TagNo]
      ,A.[Comment]
      ,A.[AssetStatus] AS StatusID
	  ,S.[status] AS [Status]
      ,A.[CreatedOn]
      ,A.[CreatedBy]
      ,A.[InsuranceExpiryDate]
      ,A.[RoadTaxExpiryDate]
      ,A.[FitnessExpiryDate]
	  ,A.[MileageLastService]
      ,A.[LastServiceDate]
  FROM [GarageDb].[dbo].[Hdr_Asset] AS A
  INNER JOIN Adm_AssetType AS T ON A.AssetTypeID = T.ID
  INNER JOIN Adm_AssetCategory AS C ON A.CategoryID = C.ID
  INNER JOIN Adm_Make AS M ON A.Make = M.ID
  INNER JOIN Adm_Model AS MM ON A.ModelID = MM.ID
  INNER JOIN Adm_FuelType AS F ON A.FuelTypeID = F.ID
  INNER JOIN Adm_Status AS S ON A.AssetStatus = S.ID
  LEFT JOIN AdmGroupType AS GP ON A.GroupID = GP.ID
  WHERE A.ID = @ID

END
GO
/****** Object:  StoredProcedure [dbo].[spGetAssetCatelogue]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spGetAssetCatelogue]

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

 SELECT A.[ID]
      ,A.[AssetTypeID]
	  ,T.AssetType
      ,A.[CategoryID]
	  ,C.CategoryName
	  ,GP.GroupName
      ,A.[EngineNo]
      ,A.[ChassisNo]
      ,A.[RegNo]
      ,A.[Make]
	  ,M.Make AS [MakeName]
      ,A.[ModelID]
	  ,MM.ModelName
      ,A.[Year]
      ,A.[EngineCapacity]
      ,A.[FuelTypeID]
	  ,F.FuelName
      ,A.[Color]
      ,A.[YearOfPurchase]
      ,A.[InitialMileage]
      ,A.[CurrentMileage]
      ,A.[AssetValue]
      ,A.[TagNo]
      ,A.[Comment]
      ,A.[AssetStatus] AS StatusID
	  ,S.[status] AS [Status]
      ,A.[CreatedOn]
      ,A.[CreatedBy]
      ,A.[InsuranceExpiryDate]
      ,A.[RoadTaxExpiryDate]
      ,A.[FitnessExpiryDate]
	  ,GETDATE() AS LoggedOn
  FROM [GarageDb].[dbo].[Hdr_Asset] AS A
  LEFT JOIN Adm_AssetType AS T ON A.AssetTypeID = T.ID
  LEFT JOIN Adm_AssetCategory AS C ON A.CategoryID = C.ID
  LEFT JOIN Adm_Make AS M ON A.Make = M.ID
  LEFT JOIN Adm_Model AS MM ON A.ModelID = MM.ID
  LEFT JOIN Adm_FuelType AS F ON A.FuelTypeID = F.ID
  LEFT JOIN Adm_Status AS S ON A.AssetStatus = S.ID
  LEFT JOIN AdmGroupType AS GP ON A.GroupID = GP.ID

END
GO
/****** Object:  StoredProcedure [dbo].[spGetAXAutoMobile]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spGetAXAutoMobile]

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT LTRIM(RTRIM([ItemId])) AS ItemId
      ,[UnitId]
      ,[ItemGroup]
      ,LTRIM(RTRIM([ItemName])) AS [ItemName]
      ,[ItemPrice] AS [ItemPrice]
      ,[PriceDate]
	  ,LTRIM(RTRIM([ItemId])) + ' - ' + LTRIM(RTRIM([ItemName]))  +' (K' + CAST(FORMAT([ItemPrice], '#,#.00') AS varchar) +')' AS FullDescription
  FROM [GarageDb].[dbo].[AXAutoMobile]
  WHERE ItemPrice > 0
  ORDER BY ItemName ASC

END
GO
/****** Object:  StoredProcedure [dbo].[spGetCurrentFuelPrice]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spGetCurrentFuelPrice] 
	-- Add the parameters for the stored procedure here
	@FuelId INT

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT TOP 1 
	[ID]
      ,[FuelID]
      ,[CurrentPrice]
      ,[DateLogged]
      ,[LoggedBy]
		FROM TrnFuelPriceHistory 
		WHERE FuelID = @FuelId
		ORDER BY DateLogged DESC

END
GO
/****** Object:  StoredProcedure [dbo].[spGetFuelConsumption]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spGetFuelConsumption]
AS
BEGIN

SELECT TOP 1000 FC.ID
	  ,FC.[RegNo]
      ,FC.[AssetID]
      ,FC.[OdometerReading]
      ,FC.[PreviousReading]
	  ,FC.[LitresReceived]
      ,FC.[CurrentFuelPrice]
	  ,(FC.[LitresReceived] * FC.[CurrentFuelPrice]) AS TotalCost
	  ,A.PlannedConsumption
	  ,A.TankCapacity
	  ,(FC.[OdometerReading] - FC.[PreviousReading]) AS KMs
	  ,((FC.[OdometerReading] - FC.[PreviousReading]) / FC.[LitresReceived]) AS [ActualKmL]
	  ,(FC.LitresReceived - A.TankCapacity) AS CapacityVariance
	  ,(A.PlannedConsumption / (FC.[OdometerReading] - FC.[PreviousReading])) AS PlannedLts
	  ,(FC.LitresReceived - (A.PlannedConsumption / (FC.[OdometerReading] - FC.[PreviousReading]))) AS [TotalLtsOverConsumption]
	  ,MK.Make AS MakeName
	  ,MD.ModelName
	  ,F.FuelName
	  ,GT.GroupName
	  ,S.Status AS AssetStatus
	  ,C.CategoryName
      ,FC.[TransactionDate]
      ,FC.[LoggedBy] AS [OperatorID]
  FROM [dbo].[TrnFuelConsumption] AS FC INNER JOIN
		[dbo].[Hdr_Asset] AS A ON FC.RegNo = A.RegNo  LEFT OUTER JOIN
		dbo.Adm_AssetCategory AS C ON A.CategoryID = C.ID LEFT OUTER JOIN
        dbo.Adm_AssetType AS T ON A.AssetTypeID = T.ID LEFT OUTER JOIN
        dbo.Adm_Make AS MK ON A.Make = MK.ID LEFT OUTER JOIN
        dbo.Adm_Model AS MD ON A.ModelID = MD.ID LEFT OUTER JOIN
        dbo.Adm_FuelType AS F ON A.FuelTypeID = F.ID LEFT OUTER JOIN
        dbo.Adm_Status AS S ON A.AssetStatus = S.ID LEFT OUTER JOIN
		dbo.AdmGroupType AS GT ON A.GroupID = GT.ID

END
GO
/****** Object:  StoredProcedure [dbo].[spGetFuelPriceHistory]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spGetFuelPriceHistory] 

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT PH.[ID]
      ,PH.[FuelID]
	  ,F.FuelName
      ,PH.[CurrentPrice]
      ,PH.[DateLogged]
      ,PH.[LoggedBy]
  FROM [GarageDb].[dbo].[TrnFuelPriceHistory] AS PH
  INNER JOIN Adm_FuelType AS F ON PH.FuelID = F.ID
  ORDER BY PH.DateLogged DESC

END
GO
/****** Object:  StoredProcedure [dbo].[spGetLogSheetById]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spGetLogSheetById]
	@ID INT

AS
BEGIN

	SET NOCOUNT ON;

	SELECT L.[ID]
      ,L.[CategoryID]
	  ,C.CategoryName
      ,L.[LogTypeID]
	  ,T.TriggerName AS LogType
      ,L.[TriggerID] AS AdmLogSheetID
      ,L.[FrequencyID]
	  ,F.FrequencyName
      ,L.[AssetID]
      ,L.[RegNo]
	  ,M.Make
	  ,MM.ModelName
      ,L.[PreviousValue]
      ,L.[CurrentValue]
      ,L.[LogStatus]
	  ,S.TransStatus
      ,L.[CreatedOn]
      ,ISNULL(L.[ModifiedOn],'') AS [ModifiedOn]
      ,ISNULL(L.[ModifiedBy],'') AS [ModifiedBy]
	  ,ISNULL(L.Comment,'') AS Comment
  FROM [GarageDb].[dbo].[Trn_LogSheet] AS L
  INNER JOIN Adm_Frequency AS F ON L.FrequencyID = F.ID
  INNER JOIN [Adm_TriggerType] AS T ON L.LogTypeID = T.ID
  INNER JOIN Adm_AssetCategory AS C ON L.CategoryID = C.ID
  INNER JOIN Hdr_Asset AS A ON L.AssetID = A.ID AND L.RegNo = L.RegNo
  INNER JOIN Adm_Make AS M ON A.Make = M.ID
  INNER JOIN Adm_Model AS MM ON A.ModelID = MM.ID
  INNER JOIN Trn_Status AS S ON L.LogStatus = S.ID
  WHERE L.LogStatus = 0 AND L.ID = @ID

END
GO
/****** Object:  StoredProcedure [dbo].[spGetLogSheetList]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spGetLogSheetList]
 @statusID int

AS
BEGIN

	SET NOCOUNT ON;

	IF @statusID = 0
	BEGIN
		SELECT L.[ID]
		  ,L.[CategoryID]
		  ,C.CategoryName
		  ,L.[LogTypeID]
		  ,T.TriggerName AS LogType
		  ,L.[TriggerID] AS AdmLogSheetID
		  ,L.[FrequencyID]
		  ,F.FrequencyName
		  ,L.[AssetID]
		  ,L.[RegNo]
		  ,M.Make
		  ,MM.ModelName
		  ,L.[PreviousValue]
		  ,L.[CurrentValue]
		  ,L.[LogStatus]
		  ,S.TransStatus
		  ,L.[CreatedOn]
		  ,ISNULL(L.[ModifiedOn],'') AS [ModifiedOn]
		  ,ISNULL(L.[ModifiedBy],'') AS [ModifiedBy]
		  ,ISNULL(L.Comment,'') AS Comment
	  FROM [GarageDb].[dbo].[Trn_LogSheet] AS L
	  INNER JOIN Adm_Frequency AS F ON L.FrequencyID = F.ID
	  INNER JOIN [Adm_TriggerType] AS T ON L.LogTypeID = T.ID
	  INNER JOIN Adm_AssetCategory AS C ON L.CategoryID = C.ID
	  INNER JOIN Hdr_Asset AS A ON L.AssetID = A.ID AND L.RegNo = L.RegNo
	  INNER JOIN Adm_Make AS M ON A.Make = M.ID
	  INNER JOIN Adm_Model AS MM ON A.ModelID = MM.ID
	  INNER JOIN Trn_Status AS S ON L.LogStatus = S.ID
	  WHERE L.LogStatus = 0
	END
	ELSE IF @statusID = 1
	BEGIN
		SELECT L.[ID]
		  ,L.[CategoryID]
		  ,C.CategoryName
		  ,L.[LogTypeID]
		  ,T.TriggerName AS LogType
		  ,L.[TriggerID] AS AdmLogSheetID
		  ,L.[FrequencyID]
		  ,F.FrequencyName
		  ,L.[AssetID]
		  ,L.[RegNo]
		  ,M.Make
		  ,MM.ModelName
		  ,L.[PreviousValue]
		  ,L.[CurrentValue]
		  ,L.[LogStatus]
		  ,S.TransStatus
		  ,L.[CreatedOn]
		  ,ISNULL(L.[ModifiedOn],'') AS [ModifiedOn]
		  ,ISNULL(L.[ModifiedBy],'') AS [ModifiedBy]
		  ,ISNULL(L.Comment,'') AS Comment
	  FROM [GarageDb].[dbo].[Trn_LogSheet] AS L
	  INNER JOIN Adm_Frequency AS F ON L.FrequencyID = F.ID
	  INNER JOIN [Adm_TriggerType] AS T ON L.LogTypeID = T.ID
	  INNER JOIN Adm_AssetCategory AS C ON L.CategoryID = C.ID
	  INNER JOIN Hdr_Asset AS A ON L.AssetID = A.ID AND L.RegNo = L.RegNo
	  INNER JOIN Adm_Make AS M ON A.Make = M.ID
	  INNER JOIN Adm_Model AS MM ON A.ModelID = MM.ID
	  INNER JOIN Trn_Status AS S ON L.LogStatus = S.ID
	  WHERE L.LogStatus = 1
	END

END
GO
/****** Object:  StoredProcedure [dbo].[spGetLogSheetSetup]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spGetLogSheetSetup]

AS
BEGIN

	SET NOCOUNT ON;

	SELECT L.[ID]
      ,L.[CategoryID]
	  ,C.CategoryName
      ,L.[LogSheetTypeID]
	  ,T.TriggerName
      ,L.[TriggerFrequency]
	  ,F.FrequencyName
      ,L.[TriggerTime]
      ,L.[IsActive]
      ,L.[CreatedOn]
      ,L.[CreatedBy]
      ,L.[ModifiedOn]
      ,L.[ModifiedBy]
  FROM [GarageDb].[dbo].[Adm_ManageLogSheet] AS L
  LEFT JOIN Adm_AssetCategory AS C ON L.CategoryID = C.ID
  LEFT JOIN Adm_TriggerType AS T ON L.LogSheetTypeID = T.ID
  LEFT JOIN [Adm_Frequency] AS F ON L.TriggerFrequency = F.ID

END
GO
/****** Object:  StoredProcedure [dbo].[spGetMaintenanceTrigger]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spGetMaintenanceTrigger]
	-- Add the parameters for the stored procedure here
	@CategoryID INT
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT DISTINCT A.[ID]
      ,A.[CategoryID]
	  ,C.CategoryName
      ,A.[TriggerID]
	  ,T.TriggerName
      ,A.[TriggerValue]
      ,A.[Threshold]
      ,A.[IsActive]
      ,A.[MaintenanceTrigger]
  FROM [GarageDb].[dbo].[Adm_ManageTrigger] AS A
  INNER JOIN Adm_AssetCategory AS C ON A.CategoryID = C.ID
  INNER JOIN Adm_TriggerType AS T ON A.TriggerID = T.ID
  WHERE MaintenanceTrigger = 1 AND CategoryID = @CategoryID

END
GO
/****** Object:  StoredProcedure [dbo].[spGetMaintenanceTriggerList]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spGetMaintenanceTriggerList]

AS
BEGIN

	SET NOCOUNT ON;

	SELECT T.[ID]
		  ,T.[CategoryID]
		  ,C.CategoryName
		  ,T.[TriggerID]
		  ,TP.TriggerName
		  ,T.MaintenanceTrigger
		  ,T.[TriggerValue]
		  ,T.[Threshold]
		  ,T.[IsActive]
		  ,T.[CreatedBy]
		  ,T.[CreatedOn]
		  ,T.[ModifiedBy]
		  ,T.[ModifiedOn]
	  FROM [GarageDb].[dbo].[Adm_ManageTrigger] AS T
	  INNER JOIN Adm_AssetCategory AS C ON T.CategoryID = C.ID
	  INNER JOIN Adm_TriggerType AS TP ON T.TriggerID = TP.ID

END
GO
/****** Object:  StoredProcedure [dbo].[spGetPartsCatalog]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spGetPartsCatalog]

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT P.[ID]
      ,P.[ItemDescription]
      ,P.[PartNumber]
      ,P.[CategoryID]
	  ,C.CategoryName
      ,P.[MakeID]
	  ,M.Make
      ,P.[ModelID]
	  ,MM.ModelName
      ,P.[Comment]
	  ,P.MaintenancePart
  FROM [GarageDb].[dbo].[AdmPartsCatalog] AS P
  INNER JOIN Adm_AssetCategory AS C ON P.CategoryID = C.ID
  INNER JOIN Adm_Make AS M ON P.MakeID = M.ID
  INNER JOIN Adm_Model AS MM ON P.ModelID = MM.ID
  WHERE P.IsDeleted = 0

END
GO
/****** Object:  StoredProcedure [dbo].[spGetPartsUsed]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spGetPartsUsed]
	-- Add the parameters for the stored procedure here
	@ID INT

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	/****** Script for SelectTopNRows command from SSMS  ******/
SELECT P.[ID]
      ,P.[MainID]
      ,P.[ProblemDescription]
      ,P.[DocketNo]
      ,P.[PartID]
	  ,LTRIM(RTRIM(C.ItemId)) +' - '+LTRIM(RTRIM(C.ItemName)) AS PartDescription
	  ,LTRIM(RTRIM(C.ItemId))  PartNumber
	  ,P.PartCost
      ,P.[Qty]
      ,P.[DateLogged]
      ,P.[LoggedBy]
  FROM [GarageDb].[dbo].[TrnPartUsed] AS P
  INNER JOIN [AXAutoMobile] AS C ON P.PartID = C.ItemId
  --INNER JOIN AdmPartsCatalog AS C ON P.PartID = C.ID
  WHERE P.MainID = @ID

END
GO
/****** Object:  StoredProcedure [dbo].[spGetStatutoryByCategoryId]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spGetStatutoryByCategoryId]
	@CategoryID int

AS
BEGIN

	SET NOCOUNT ON;

	SELECT L.[ID]
      ,L.[CategoryID]
	  ,C.CategoryName
      ,L.[StatutoryID]
	  ,S.StatutoryName
      ,L.[CreatedOn]
      ,L.[CreatedBy]
      ,L.[ModifiedOn]
      ,L.[ModifiedBy]
  FROM [GarageDb].[dbo].[Adm_CategoryStatutoryLink] AS L
  LEFT JOIN Adm_AssetCategory AS C ON L.CategoryID = C.ID
  LEFT JOIN Adm_Statutory AS S ON L.StatutoryID = S.ID
  WHERE L.CategoryID = @CategoryID

END
GO
/****** Object:  StoredProcedure [dbo].[spGetTags]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spGetTags]
	 @AssetID INT,
	 @Type INT
AS
BEGIN

	IF @Type = 0
	BEGIN
		SELECT COUNT([ID]) AS Results
				FROM [GarageDb].[dbo].[HdrMaintenance]
				WHERE AssetID = 18
	END
		ELSE IF @Type = 1
	BEGIN
			SELECT COUNT([ID]) AS Results
				FROM [GarageDb].[dbo].[HdrMaintenance]
				WHERE AssetID = 18 AND MaintenanceType = 1
	END
		ELSE IF @Type = 2
	BEGIN
			SELECT COUNT([ID]) AS Results
				FROM [GarageDb].[dbo].[HdrMaintenance]
				WHERE AssetID = 18 AND MaintenanceType = 2
	END

END
GO
/****** Object:  StoredProcedure [dbo].[spGetWorkOrderHdr]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spGetWorkOrderHdr]
	-- Add the parameters for the stored procedure here
	 @MainID INT

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT WO.[ID]
      ,WO.[MaintenanceID]
      ,WO.[SectionID]
	  ,S.SectionName
      ,WO.[Priority]
	  ,p.PriorityName
      ,WO.[Purpose]
	  ,PP.PurposeDescription
      ,WO.[ReasonForFailure]
	  ,R.ReasonOfFailure
      ,WO.[WorkDescription]
      ,WO.[LoggedBy]
      ,WO.[LoggedDate]
  FROM [GarageDb].[dbo].[WorkOrderHdr] AS WO
  INNER JOIN AdmSection S ON WO.SectionID = S.ID
  INNER JOIN AdmPriority AS P ON wo.Priority = p.ID
  INNER JOIN AdmReason AS R ON wo.ReasonForFailure = P.ID
  INNER JOIN AdmPurpose AS PP on WO.Purpose = PP.ID
  WHERE WO.[MaintenanceID] = @MainID

END
GO
/****** Object:  StoredProcedure [dbo].[spGetWorkOrderParts]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spGetWorkOrderParts]
	-- Add the parameters for the stored procedure here
	 @MainID INT

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
SELECT P.[ID]
      ,P.[MaintenanceID]
      ,P.[PartID]
	  ,PP.ItemDescription [PartDescription]
      ,P.[Qty]
      ,P.[UnitCost]
      ,P.[TransactionDate]
  FROM [GarageDb].[dbo].[TrnWorkOrderParts] AS P
  INNER JOIN AdmPartsCatalog PP ON P.PartID = PP.ID
  WHERE P.[MaintenanceID] = @MainID

END
GO
/****** Object:  StoredProcedure [dbo].[spJobDailyLogSheet]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spJobDailyLogSheet]

AS
BEGIN

	SET NOCOUNT ON;

	INSERT INTO [Trn_LogSheet]
	(
      [CategoryID]
      ,[LogTypeID]
      ,[TriggerID]
      ,[FrequencyID]
      ,[AssetID]
      ,[RegNo]
      ,[PreviousValue]
	  ,CurrentValue
      ,[LogStatus]
      ,[CreatedOn]

	)
  
	SELECT A.CategoryID,
	L.LogSheetTypeID,
	L.ID AS TriggerID,
	L.TriggerFrequency,
	A.ID AS AssetID,
	A.RegNo,
	ISNULL(A.CurrentMileage,0) AS PreviousValue,
	-- (SELECT TOP 1 L.CurrentValue FROM [Trn_LogSheet] AS L WHERE L.AssetID =A.ID ORDER BY ID DESC)
	'' AS CurrentValue,
	0 AS [LogStatus],
	GETDATE() AS CreatedOn
	FROM [dbo].[Hdr_Asset] AS A
	INNER JOIN [Adm_ManageLogSheet] AS L ON A.CategoryID = L.CategoryID
	WHERE L.CategoryID IN 
	(
		SELECT CategoryID FROM [Adm_ManageLogSheet] WHERE IsActive = 1  /*AND CategoryID NOT IN (1) */AND L.TriggerFrequency = 1
		/** Trigger Frequency of 1 means Daily**/
	)
	ORDER BY A.ID
	
END
GO
/****** Object:  StoredProcedure [dbo].[spJobGenerateScheduleMain]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[spJobGenerateScheduleMain]

AS
BEGIN

 --   /** Log transaction **/
	INSERT INTO [dbo].[SysScheduledLogs] (AssetId,RegNo,CategoryId,CurrentValue,LastServiceValue,DifferenceValue,LogDescription,LogDate,LoggedBy,TriggerValue)

	SELECT  A.[ID],
			A.[RegNo],
			A.CategoryID,
			A.[CurrentMileage],
			A.[MileageLastService],
			ISNULL((A.[CurrentMileage] - A.[MileageLastService]), 0) AS DifferenceData,
			CASE 
				WHEN (ISNULL((A.[CurrentMileage] - A.[MileageLastService]), 0) >= T.TriggerValue)
				THEN 'MAINT SCHEDULE'
				ELSE 'NOT READY YET'
			END AS LogMessage,
			GETDATE() AS LogDate,
			'SYSTEM' AS LoggedBy,
			T.TriggerValue

	FROM [GarageDb].[dbo].[Hdr_Asset] AS A WITH (NOLOCK)
	INNER JOIN [Adm_ManageTrigger] AS T WITH (NOLOCK)
	ON A.CategoryID = T.CategoryID
	WHERE T.MaintenanceTrigger = 1 
	AND T.IsActive = 1 
	AND A.AssetStatus IN (1,2) /*Asset status for -active and -standby*/
	AND A.ID IN
	(
		SELECT A.[ID]
		FROM [GarageDb].[dbo].[Hdr_Asset] AS A WITH (NOLOCK)
			INNER JOIN [Adm_ManageTrigger] AS T WITH (NOLOCK) 
			ON A.CategoryID = T.CategoryID
		WHERE T.MaintenanceTrigger = 1 /*Active main schedule*/ 
			AND T.IsActive = 1 
			AND A.AssetStatus IN (1,2) /*Asset status for -active and -standby*/
	)

END
GO
/****** Object:  StoredProcedure [dbo].[spJobMonthlyLogSheet]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spJobMonthlyLogSheet]

AS
BEGIN

	SET NOCOUNT ON;

	INSERT INTO [Trn_LogSheet]
	(
      [CategoryID]
      ,[LogTypeID]
      ,[TriggerID]
      ,[FrequencyID]
      ,[AssetID]
      ,[RegNo]
      ,[PreviousValue]
      ,[LogStatus]
      ,[CreatedOn]

	)
  
	SELECT A.CategoryID,
	L.LogSheetTypeID,
	L.ID AS TriggerID,
	L.TriggerFrequency,
	A.ID AS AssetID,
	A.RegNo,
	ISNULL(A.CurrentMileage,0) AS PreviousValue,
	-- (SELECT TOP 1 L.CurrentValue FROM [Trn_LogSheet] AS L WHERE L.AssetID =A.ID		ORDER BY ID DESC)
	0 AS [LogStatus],
	GETDATE() AS CreatedOn
	FROM [dbo].[Hdr_Asset] AS A
	INNER JOIN [Adm_ManageLogSheet] AS L ON A.CategoryID = L.CategoryID
	WHERE L.CategoryID IN 
	(
		SELECT CategoryID FROM [Adm_ManageLogSheet] WHERE IsActive = 1 AND L.TriggerFrequency = 3 AND CategoryID NOT IN (1)
		/** Trigger Frequency of 3 means Monthly**/
	)

END
GO
/****** Object:  StoredProcedure [dbo].[spJobStartScheduledMain]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[spJobStartScheduledMain]
AS
BEGIN

-- Get schedule log 1 at a time
	DECLARE @RegNo VARCHAR(10),
			@AssetID INT,
			@LogDescription VARCHAR(50),
			@LogID INT,
			@CategoryId INT,
			@ModelId VARCHAR(5),
			@MakeId VARCHAR(5),
			@MainId INT,
			@CurrentMileage INT


	-- Get asset detail schedule for maintenance
	SELECT TOP 1 @RegNo = S.RegNo, @AssetID = S.AssetId,@LogDescription = LogDescription, @LogID = ID, @CategoryId = S.CategoryId 
	FROM SysScheduledLogs AS S 
	WHERE IsProcessed = 0
	
	-- Get additional information on an asset
	SELECT TOP 1 @ModelId = H.ModelID, @MakeId = H.Make, @CurrentMileage = H.CurrentMileage
	FROM Hdr_Asset AS H 
	WHERE H.RegNo = @RegNo

	-- Add maintenance header
	INSERT INTO [dbo].[HdrMaintenance] 
	(
		 [MaintenanceType]
		,[MaintenanceSummary]
		,[BreakdownDate]
		,[CurrentMileage]
		,[LoggedBy]
		,[StatusID]
		,[DateTimeIn]
		,[RegNo]
		,[AssetID]
		,[CreatedOn]
	)

	SELECT
		2 AS [MaintenanceType]
		,'Scheduled Maintenance' AS [MaintenanceSummary]
		,CAST(GetDate() AS Date) AS [BreakdownDate]
		,A.CurrentMileage
		,'SYSTEM' AS LoggedBy
		,0 AS StatusID
		,GetDate() AS [DateTimeIn]
		,A.RegNo
		,A.ID AS AssetID
		,GetDate() AS CreatedOn
	FROM Hdr_Asset AS A
	WHERE A.RegNo = @RegNo 
		AND A.ID = @AssetID

	-- Get the latest maintenance id logged
	SELECT TOP 1 @MainId = HH.ID 
	FROM [HdrMaintenance] AS HH 
	WHERE RegNo = @RegNo 
		AND AssetID = @AssetID 
	ORDER BY CreatedOn DESC

	-- Add maintenance parts
	INSERT INTO TrnPartUsed (MainID, ProblemDescription, DocketNo, PartID, Qty, PartCost, PurchaseOrder, DateLogged, LoggedBy)
		SELECT @MainId AS MainID
			,'Scheduled - ' + LTRIM(RTRIM(P.ItemName)) AS ProblemDescription
			,'AUTO' AS DocketNo
			,P.ItemId AS PartID
			,1 AS Qty
			,P.ItemPrice AS PartCost
			,'' AS PurchaseOrder
			,GetDate() AS DateLogged
			,'SYSTEM' AS LoggedBy
	FROM [AXAutoMobile] AS P 
	WHERE P.[ItemId] IN ('AS012','AS273','AS0234')
	/* OLD QUERY NOT USED NOW BECAUSE WE HAVE TO AXAUTOMOBILE*
	SELECT @MainId AS MainID
			,'Scheduled - ' + LTRIM(RTRIM(P.ItemDescription)) AS ProblemDescription
			,'AUTO' AS DocketNo
			,P.ID AS PartID
			,1 AS Qty
			,0 AS PartCost
			,'' AS PurchaseOrder
			,GetDate() AS DateLogged
			,'SYSTEM' AS LoggedBy
	FROM AdmPartsCatalog AS P 
	WHERE P.CategoryID = @CategoryId 
		AND P.ModelID = @ModelId 
		AND P.MakeID = @MakeId 
		AND IsDeleted = 0 
		AND MaintenancePart = 1
	*/


	-- Complete the Log scheduled maintenance
	UPDATE SysScheduledLogs SET IsProcessed = 1, ProcessedDate = GETDATE() WHERE ID  = @LogID

	-- Update asset status, service date and service value
	UPDATE Hdr_Asset SET AssetStatus = 4,MileageLastService = @CurrentMileage, LastServiceDate = CAST(GETDATE() AS date) WHERE RegNo = @RegNo 
	
END
GO
/****** Object:  StoredProcedure [dbo].[spJobWeeklyLogSheet]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spJobWeeklyLogSheet]

AS
BEGIN

	SET NOCOUNT ON;

	INSERT INTO [Trn_LogSheet]
	(
      [CategoryID]
      ,[LogTypeID]
      ,[TriggerID]
      ,[FrequencyID]
      ,[AssetID]
      ,[RegNo]
      ,[PreviousValue]
      ,[LogStatus]
      ,[CreatedOn]

	)
  
	SELECT A.CategoryID,
	L.LogSheetTypeID,
	L.ID AS TriggerID,
	L.TriggerFrequency,
	A.ID AS AssetID,
	A.RegNo,
	ISNULL(A.CurrentMileage,0) AS PreviousValue,
	-- (SELECT TOP 1 L.CurrentValue FROM [Trn_LogSheet] AS L WHERE L.AssetID =A.ID ORDER BY ID DESC)
	0 AS [LogStatus],
	GETDATE() AS CreatedOn
	FROM [dbo].[Hdr_Asset] AS A
	INNER JOIN [Adm_ManageLogSheet] AS L ON A.CategoryID = L.CategoryID
	WHERE L.CategoryID IN 
	(
		SELECT CategoryID FROM [Adm_ManageLogSheet] WHERE IsActive = 1 AND L.TriggerFrequency = 2 AND CategoryID NOT IN (1)
		/** Trigger Frequency of 2 means Weekly**/
	)

END
GO
/****** Object:  StoredProcedure [dbo].[spOffSiteUtilization]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spOffSiteUtilization]

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	/*OffSite Utilization*/
	 SELECT LL.[ID]
		  ,A.[AssetTypeID]
		  ,T.AssetType
		  ,A.[CategoryID]
		  ,C.CategoryName
		  ,GT.GroupName
		  ,A.[EngineNo]
		  ,A.[ChassisNo]
		  ,A.[RegNo]
		  ,A.[Make]
		  ,M.Make AS [MakeName]
		  ,A.[ModelID]
		  ,MM.ModelName
		  ,A.[Year]
		  ,A.[EngineCapacity]
		  ,A.[FuelTypeID]
		  ,F.FuelName
		  ,A.[Color]
		  ,A.[YearOfPurchase]
		  ,A.[InitialMileage]
		  ,ISNULL(A.[CurrentMileage], 0.00) AS [CurrentMileage]
		  ,A.[AssetValue]
		  ,A.[TagNo]
		  ,A.[Comment]
		  ,A.[AssetStatus] AS StatusID
		  ,S.[status] AS [Status]
		  ,A.[CreatedOn]
		  ,A.[CreatedBy]
		  ,A.[InsuranceExpiryDate]
		  ,A.[RoadTaxExpiryDate]
		  ,A.[FitnessExpiryDate]
		  ,LL.CreatedOn AS LoggedOn
	  FROM [GarageDb].[dbo].[Hdr_Asset] AS A
	  INNER JOIN Adm_AssetType AS T ON A.AssetTypeID = T.ID
	  INNER JOIN Adm_AssetCategory AS C ON A.CategoryID = C.ID
	  INNER JOIN Adm_Make AS M ON A.Make = M.ID
	  INNER JOIN Adm_Model AS MM ON A.ModelID = MM.ID
	  INNER JOIN Adm_FuelType AS F ON A.FuelTypeID = F.ID
	  INNER JOIN Adm_Status AS S ON A.AssetStatus = S.ID
	  INNER JOIN AdmGroupType AS GT ON A.GroupID = GT.ID
	  LEFT JOIN [Trn_LogSheet] AS LL ON A.RegNo = LL.RegNo

	  WHERE LL.LogStatus = 0 AND A.RegNo IN 
	  (
		SELECT DISTINCT [RegNo]
		FROM [GarageDb].[dbo].[Trn_LogSheet]
		WHERE [LogTypeID] IN (2) AND CategoryID IN (1) AND LogStatus = 0
	  )

	  /*
	  * [LogTypeID] Naming
	  *	ID	TriggerName
		1	H - Running Hours
		2	KM - Mileage
		3	F - Fuel Consumption
	  */
  
END
GO
/****** Object:  StoredProcedure [dbo].[spOnSiteUtilization]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spOnSiteUtilization]

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	/*On-Site Utilization*/
	 SELECT A.[ID]
		  ,A.[AssetTypeID]
		  ,T.AssetType
		  ,A.[CategoryID]
		  ,C.CategoryName
		  ,GT.GroupName
		  ,A.[EngineNo]
		  ,A.[ChassisNo]
		  ,A.[RegNo]
		  ,A.[Make]
		  ,M.Make AS [MakeName]
		  ,A.[ModelID]
		  ,MM.ModelName
		  ,A.[Year]
		  ,A.[EngineCapacity]
		  ,A.[FuelTypeID]
		  ,F.FuelName
		  ,A.[Color]
		  ,A.[YearOfPurchase]
		  ,A.[InitialMileage]
		  ,ISNULL(A.[CurrentMileage], 0.00) AS [CurrentMileage]
		  ,A.[AssetValue]
		  ,A.[TagNo]
		  ,A.[Comment]
		  ,A.[AssetStatus] AS StatusID
		  ,S.[status] AS [Status]
		  ,A.[CreatedOn]
		  ,A.[CreatedBy]
		  ,A.[InsuranceExpiryDate]
		  ,A.[RoadTaxExpiryDate]
		  ,A.[FitnessExpiryDate]
		  ,GETDATE() AS LoggedOn
	  FROM [GarageDb].[dbo].[Hdr_Asset] AS A
	  INNER JOIN Adm_AssetType AS T ON A.AssetTypeID = T.ID
	  INNER JOIN Adm_AssetCategory AS C ON A.CategoryID = C.ID
	  INNER JOIN Adm_Make AS M ON A.Make = M.ID
	  INNER JOIN Adm_Model AS MM ON A.ModelID = MM.ID
	  INNER JOIN Adm_FuelType AS F ON A.FuelTypeID = F.ID
	  INNER JOIN Adm_Status AS S ON A.AssetStatus = S.ID
	  INNER JOIN AdmGroupType AS GT ON A.GroupID = GT.ID
	  WHERE A.CategoryID NOT IN (2,3,4) AND  A.RegNo NOT IN 
	  (
		SELECT DISTINCT [RegNo]
		FROM [GarageDb].[dbo].[Trn_LogSheet]
		WHERE [LogTypeID] IN (2) AND CategoryID IN (1) AND LogStatus = 0
	  )

	  /*
	  * [LogTypeID] Naming
	  *	ID	TriggerName
		1	H - Running Hours
		2	KM - Mileage
		3	F - Fuel Consumption
	  */
  
END
GO
/****** Object:  StoredProcedure [dbo].[spUpdateLogSheet]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spUpdateLogSheet]
		@ID	int,
		@CurrentValue float,
		@LogStatus int,
		@ModifiedOn	datetime,
		@ModifiedBy	varchar(50),
		@LogTypeID int,
		@Comment	varchar(255)

AS
BEGIN

	SET NOCOUNT ON;

	UPDATE H SET H.CurrentMileage = @CurrentValue
		FROM [Trn_LogSheet] AS L
		INNER JOIN Hdr_Asset AS H ON H.RegNo = L.RegNo
		WHERE L.ID = @ID

	  UPDATE [Trn_LogSheet] SET CurrentValue = @CurrentValue,
							[LogStatus] = @LogStatus,
							[ModifiedOn] = @ModifiedOn,
							[ModifiedBy] = @ModifiedBy,
							[Comment] = @Comment

						WHERE ID = @ID


END
GO
/****** Object:  StoredProcedure [dbo].[spUpdateMaintenance]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spUpdateMaintenance]
	-- Add the parameters for the stored procedure here
	 @ID	int, 
	 @StatusID	int,
	 @ClosureComment	varchar(MAX),
	 @DateClosed	datetime,
	 @ModifiedBy	varchar(20)

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

 	DECLARE
	@AssetId INT,
	@MileageLastService float,
	@RegNo	varchar(10),
	@CountActive INT 

	UPDATE HdrMaintenance SET StatusID = @StatusID,
	ModifiedOn = GETDATE(),
	ClosureComment = @ClosureComment,
    ModifiedBy = @ModifiedBy,
	DateClosed = @DateClosed
	WHERE ID = @ID

	SELECT @AssetId = AssetID, @MileageLastService = CurrentMileage,@RegNo = RegNo FROM HdrMaintenance WHERE ID = @ID

	/*
		- Check active maintenance
	*/
	Select @CountActive  = (select COUNT(ID) from HdrMaintenance where AssetID = @AssetId and StatusID = 0)
	IF(@CountActive <= 0)
		BEGIN
			/* Change asset status (active) if all maintenance are closed */
			--SELECT 'Something' AS MessageForUser
			UPDATE Hdr_Asset SET LastServiceDate = @DateClosed, MileageLastService = @MileageLastService, AssetStatus = 1 WHERE ID = @AssetId AND RegNo = @RegNo
			
		END
	ELSE IF(@CountActive > 0)
		BEGIN
			--SELECT 'Nothing' AS MessageForUser
			UPDATE Hdr_Asset SET LastServiceDate = @DateClosed, MileageLastService = @MileageLastService WHERE ID = @AssetId AND RegNo = @RegNo
		END

END
GO
/****** Object:  StoredProcedure [dbo].[zspGetRoleUser]    Script Date: 2021/05/31 17:12:16 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[zspGetRoleUser] 
@UserId varchar(20)
AS
BEGIN
-- SET NOCOUNT ON added to prevent extra result sets from
-- interfering with SELECT statements.
SET NOCOUNT ON;

SELECT RU.[ID]
      ,RU.[UserId]
      ,RU.[RoleName]
 ,R.RoleDescription
 ,R.Module
      ,RU.[CreatedOn]
      ,RU.[LoggedBy]
  FROM [GarageDb].[dbo].[zRoleUser] AS RU
  INNER JOIN zRole AS R ON RU.RoleName = R.RoleName
  WHERE RU.UserId = @UserId

END
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "L"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 136
               Right = 208
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "C"
            Begin Extent = 
               Top = 6
               Left = 246
               Bottom = 119
               Right = 416
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "T"
            Begin Extent = 
               Top = 6
               Left = 454
               Bottom = 102
               Right = 624
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "MT"
            Begin Extent = 
               Top = 6
               Left = 662
               Bottom = 136
               Right = 832
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'V_SummaryTriggerLog'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'V_SummaryTriggerLog'
GO
USE [master]
GO
ALTER DATABASE [GarageDb] SET  READ_WRITE 
GO
